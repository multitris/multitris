#!/usr/bin/ruby
#
# Author:: Johannes Krude
# Copyright:: (c) Johannes Krude 2008
# License:: AGPL3
#
#--
# This file is part of multitris.
#
# multitris is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# multitris is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with multitris.  If not, see <http://www.gnu.org/licenses/>.
#++

require 'socket'
require 'multitris/comand'
require 'multitris/guiconcentrator'
require 'multitris/gameboard'

unless (1..2) === ARGV.size
	STDERR.puts "usage: ./log-server port [file]"
	exit 1
end

input= case ARGV[1]
when nil
	STDOUT
when "-"
	STDOUT
else
	File.open(ARGV[1])
end

board= Multitris::GameBoard.new

gui_concentrator= Multitris::GUIConcentrator.new(board)

Thread.new do
	guis= TCPServer.new(ARGV[0])
	while gui= guis.accept
		gui_concentrator.addGUI(gui)
	end
end

start= Time.now

input.each do |line|
	line.strip!
	line=~ /^([^ ]+) (.*?)$/
	time= $1
	cmd= Multitris::Comand.from_string($2)
	cmd.args.size.times do |i| # this is realy ugly but neccesarry
		if cmd.args[i]=~ /^\d+$/
			cmd.args[i]= cmd.args[i].to_i
		end
	end
	wait= time.to_f + (start - Time.now)
	sleep wait if wait > 0
	board.execute(cmd)
end

