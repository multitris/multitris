#!/usr/bin/ruby
#
# Author:: Johannes Krude
# Copyright:: (c) Johannes Krude 2008
# License:: AGPL3
#
#--
# This file is part of multitris.
#
# multitris is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# multitris is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with multitris.  If not, see <http://www.gnu.org/licenses/>.
#++

TIMEOUT= 1

require 'multitrisclients'
require 'httpserver'
require 'timeouts'

if ARGV.size != 3
	STDERR.puts "usage: ./ruby-web server port webserverport"
	exit 1
end

timeouts= Timeouts.new(TIMEOUT)
clients= MultitrisClients.new(ARGV[0], ARGV[1])

def split_input(string)
	string=~ /^(\w+) (.*?)$/
		[$1, $2]
end


webserver= HTTPServer.new("multitris-web")
webserver.listen(ARGV[2]) do |filename, vars|
	begin
		if filename=="command"
			next unless vars["post-data"]
			cookie, command= split_input(vars["post-data"])
			if (command=~ /^COOKIE (\w+)$/) # new connection
				next "ERROR" unless $1 == cookie
				clients.userAdd(cookie);
				timeouts.register(cookie) do
					timeouts.clear(cookie)
					clients.userClose(cookie, "timeout")
				end
			else
				next "FUCKYOU no connection found" unless clients.userExists?(cookie)
				timeouts.reset(cookie)
				clients.userTransmit(cookie, command) unless command.empty?
				clients.userReceive(cookie)
			end
		else
			HTTPServer::put_file("play.html", "text/html")
		end
	rescue
	end
end

